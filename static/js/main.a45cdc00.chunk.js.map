{"version":3,"sources":["common.js","Comment.js","imgs/bubble.png","CommentWindow.js","Story.js","StoryWindow.js","imgs/yahnw.png","Ribbon.js","App.js","index.js"],"names":["getHumanReadableTimeElapsed","unixTimeStamp","secondsElapsedSincePost","Math","floor","Date","now","days","hours","minutes","Comment","props","state","kids","comment","isHidden","root","fetch","then","resp","json","response","this","setState","bind","fetchComments","rootKid","prevProps","purified","DOMPurify","sanitize","childComments","kid","push","nesting","style","paddingLeft","marginLeft","borderLeft","className","onClick","authorClicked","dangerouslySetInnerHTML","__html","Component","CommentWindow","comments","shouldHide","undefined","displayText","src","bubble","alt","width","Story","storyJson","id","commentCallback","url","replace","styling","backgroundColor","selected","isMobile","href","minimizeUrl","clear","float","commentIconClicked","length","StoryWindow","commentClickCallback","kidsArray","storyCommentIds","selectedStory","selectedStoryText","handleWindowSizeChange","isMobileView","ref","React","createRef","storyIds","storyMode","fetchStories","scrollToTopOfPage","window","addEventListener","removeEventListener","current","scrollTo","innerWidth","stories","storyId","Ribbon","selectedButton","buttonClicked","storyModeChangedCallback","yahnw","storyButtonClicked","App","storyModeChanged","s","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a45cdc00.chunk.js","sourcesContent":["const secondsInDay = 86400;\nconst secondsInHour = 3600;\nconst secondsInMinute = 60;\n\nexport function getHumanReadableTimeElapsed(unixTimeStamp) {\n\n    let unixTimeNow = Math.floor(Date.now() / 1000);\n    let secondsElapsedSincePost = unixTimeNow - unixTimeStamp;\n\n    if (secondsElapsedSincePost >= secondsInDay) {\n        let days = Math.floor(secondsElapsedSincePost / secondsInDay);\n        return days > 1 ? `${days} days ago` : '1 day ago';\n    }\n\n    if (secondsElapsedSincePost >= secondsInHour) {\n        let hours = Math.floor(secondsElapsedSincePost / secondsInHour);\n        return hours > 1 ? `${hours} hours ago` : '1 hour ago';\n    }\n\n    let minutes = Math.floor(secondsElapsedSincePost / secondsInMinute);\n    if (minutes > 0) {\n        return minutes > 1 ? `${minutes} minutes ago` : '1 minute ago';\n    }\n\n    return 'Just Posted';\n}","import React, { Component } from 'react';\nimport './styles/comment.css';\nimport DOMPurify from 'dompurify';\nimport { getHumanReadableTimeElapsed } from './common.js';\n\nclass Comment extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            kids: null,\n            comment: null,\n            isHidden: false\n        }\n    }\n\n    fetchComments(root) {\n        let head = 'https://hacker-news.firebaseio.com/v0/item/';\n        let tail = '.json'\n\n        fetch(head + root + tail)\n            .then((resp) => resp.json())\n            .then(function (response) {\n                this.setState({ comment: response });\n            }.bind(this));\n    }\n\n    componentDidMount() {\n        this.fetchComments(this.props.rootKid);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.rootKid !== prevProps.rootKid) {\n            this.setState({ isHidden: false });\n            this.fetchComments(this.props.rootKid);\n        }\n    }\n\n    authorClicked() {\n        this.setState({ isHidden: !this.state.isHidden });\n    }\n\n    render() {\n\n        if (this.state.comment && !this.state.comment['deleted']) {\n\n            //Comments are given in HTML, important that we sanitize the content before displaying it \n            let purified = DOMPurify.sanitize(this.state.comment['text']);\n\n            //Create the child comments of this comment\n            let childComments = [];\n            if (this.state.comment['kids']) {\n                for (let kid of this.state.comment['kids']) {\n                    childComments.push(<Comment key={kid} rootKid={kid} nesting={this.props.nesting + 1}></Comment>);\n                }\n            }\n\n            if (!this.state.isHidden) {\n                return (\n                    <div style={{ paddingLeft: (this.props.nesting === 0 ? '0%' : '2%') }}>\n                        <div style={{ marginLeft: '4px', borderLeft: (this.props.nesting === 0 ? 'none' : '2px solid grey') }}>\n                            <button className=\"comment-author\" onClick={() => this.authorClicked()}>\n                                <div className=\"triangle-box\">\n                                    <div className=\"triangle-up-comment\"/>\n                                </div>\n                                {this.state.comment['by']}\n                                <p className=\"time\">{getHumanReadableTimeElapsed(this.state.comment['time'])}</p>\n                            </button>\n                            <div style={{ paddingLeft: '2%' }}>\n                                <div className=\"comment-box\"\n                                    dangerouslySetInnerHTML={{\n                                        __html: purified\n                                    }} />\n                            </div>\n                            {childComments}\n                        </div>\n                    </div>\n                )\n            } else {\n                return (\n                    <div style={{ paddingLeft: (this.props.nesting === 0 ? '0%' : '2%') }}>\n                        <div style={{ marginLeft: '4px', borderLeft: (this.props.nesting === 0 ? 'none' : '2px solid grey') }}>\n                            <button className=\"comment-author\" onClick={() => this.authorClicked()}>\n                                <div className=\"triangle-box\">\n                                    <div className=\"triangle-down-comment\"/>\n                                </div>\n                                {this.state.comment['by']}\n                                <p className=\"time\">\n                                    {getHumanReadableTimeElapsed(this.state.comment['time'])}\n                                </p>\n                            </button>\n                        </div>\n                    </div>\n                )\n            }\n        }\n        return <div></div>\n    }\n}\n\nexport default Comment;","export default __webpack_public_path__ + \"static/media/bubble.b5f42b63.png\";","import React, { Component } from 'react';\nimport Comment from './Comment';\nimport DOMPurify from 'dompurify';\nimport './styles/comment.css';\nimport bubble from './imgs/bubble.png';\n\nclass CommentWindow extends Component {\n\n    render() {\n\n        if (this.props.kids) {\n            let comments = [];\n            for (let kid of this.props.kids) {\n                comments.push(<Comment key={kid} rootKid={kid} nesting={0} shouldHide={false}></Comment>)\n            }\n            if (this.props.displayText === undefined) {\n                return (\n                    <div className=\"comment-window\">\n                        {comments}\n                    </div>\n                );\n            } else {\n                let purified = DOMPurify.sanitize(this.props.displayText);\n\n                return (\n                    <div>\n                        <div className=\"comment-text-box\"\n                            dangerouslySetInnerHTML={{\n                                __html: purified\n                            }} />\n                        <div className=\"comment-window\">\n                            {comments}\n                        </div>\n                    </div>\n                );\n            }\n\n        }\n\n        return (\n            <div>\n                <p className=\"click-comment-message\">Click on a</p>\n                <img src={bubble} alt=\"speech bubble\" style={{ width: '3%' }} />\n            </div>\n        )\n    }\n\n}\n\nexport default CommentWindow;","import React, { Component } from 'react';\nimport './styles/story.css';\nimport { getHumanReadableTimeElapsed } from './common.js';\nimport bubble from './imgs/bubble.png';\nclass Story extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            storyJson: null\n        };\n    }\n\n    componentDidMount() {\n\n        let link = 'https://hacker-news.firebaseio.com/v0/item/';\n        let tail = '.json';\n\n        fetch(link + this.props.id + tail)\n            .then((resp) => resp.json())\n            .then(function (response) {\n                this.setState({ storyJson: response });\n            }.bind(this));\n    }\n\n    commentIconClicked() {\n        this.props.commentCallback(this.state.storyJson['kids'], this.state.storyJson['id'], this.state.storyJson['text']);\n    }\n\n    /*\n        Remove the http(s)://www. from links to make them easier to read\n    */\n    minimizeUrl(url) {\n        if (url) {\n            return url.replace(/^(?:https?:\\/\\/)?(?:www\\.)?/i, \"\");\n        }\n        return '';\n    }\n\n    render() {\n\n        if (!this.state.storyJson) {\n            return <div></div>;\n        }\n\n        const styling = {\n            backgroundColor: this.props.selected ? '#272727' : '',\n        }\n\n        if (this.props.isMobile) {\n            return (\n                <div className=\"story-container\" style={styling}>\n                    <div className=\"story-card\">\n                        <a className=\"title\" href={this.state.storyJson['url']}>\n                            {this.state.storyJson['title']}\n                        </a>\n                        <div className=\"flex\">\n                            <p className=\"author\">\n                                {this.state.storyJson['by']}\n                            </p>\n                            <p className=\"time-story\">\n                                {getHumanReadableTimeElapsed(this.state.storyJson['time'])}\n                            </p>\n                        </div>\n                        <a className=\"link\" href={this.state.storyJson['url']}>\n                            {this.minimizeUrl(this.state.storyJson['url'])}\n                        </a>\n                    </div>\n                    <div className=\"points-box\">\n                        <div className=\"flex\">\n                            <p className=\"score\">\n                                {this.state.storyJson['score']}\n                            </p>\n                            <div className=\"triangle-up\" />\n                        </div>\n                    </div>\n                    <div style={{ clear: 'both' }} />\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"story-container\" style={styling}>\n                    <div style={{ float: 'left', width: '85%' }}>\n                        <a className=\"title\" href={this.state.storyJson['url']}>\n                            {this.state.storyJson['title']}\n                        </a>\n                        <div className=\"flex\">\n                            <p className=\"author\">\n                                {this.state.storyJson['by']}\n                            </p>\n                            <p className=\"time-story\">\n                                {getHumanReadableTimeElapsed(this.state.storyJson['time'])}\n                            </p>\n                        </div>\n                        <a className=\"link\" href={this.state.storyJson['url']}>\n                            {this.minimizeUrl(this.state.storyJson['url'])}\n                        </a>\n                    </div>\n                    <div className=\"comments-and-points-box\">\n                        <div className=\"flex\">\n                            <p className=\"score\">\n                                {this.state.storyJson['score']}\n                            </p>\n                            <div className=\"triangle-up\" />\n                        </div>\n                        <button className=\"flex comment-button\" onClick={() => this.commentIconClicked()}>\n                            <p className=\"comment-count\">\n                                {this.state.storyJson['kids'] ? this.state.storyJson['kids'].length : 0}\n                            </p>\n                            <img src={bubble} alt=\"speech bubble\" className=\"speech-bubble\" />\n                        </button>\n                    </div>\n                    <div style={{ clear: 'both' }} />\n                </div>\n            )\n        }\n\n\n    }\n}\n\nexport default Story;","import React, { Component } from 'react';\nimport CommentWindow from './CommentWindow';\nimport Story from './Story';\nimport './styles/storyWindow.css'\n\nclass StoryWindow extends Component {\n\n    constructor(props) {\n        super(props);\n        this.ref = React.createRef();\n        this.state = {\n            storyIds: null,\n            storyCommentIds: null,\n            selectedStory: null,\n            selectedStoryText: null,\n            isMobile: this.isMobileView()\n        }\n    }\n\n    commentClickCallback = (kidsArray, id, displayText) => {\n        this.setState({ storyCommentIds: kidsArray, selectedStory: id, selectedStoryText: displayText });\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.storyMode !== prevProps.storyMode) {\n            this.fetchStories();\n            this.scrollToTopOfPage();\n        }\n    }\n\n    componentDidMount() {\n        this.fetchStories();\n        window.addEventListener('resize', this.handleWindowSizeChange);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleWindowSizeChange);\n    }\n\n    handleWindowSizeChange = () => {\n        if (this.state.isMobile !== this.isMobileView()) {\n            this.setState({ isMobile: !this.state.isMobile })\n        }\n    };\n\n    scrollToTopOfPage() {\n        this.ref.current.scrollTo(0, 0);\n    }\n\n    fetchStories() {\n        let url = 'https://hacker-news.firebaseio.com/v0/topstories.json';\n        if (this.props.storyMode === 'Best') {\n            url = 'https://hacker-news.firebaseio.com/v0/beststories.json';\n        } else if (this.props.storyMode === 'New') {\n            url = 'https://hacker-news.firebaseio.com/v0/newstories.json';\n        }\n\n        fetch(url)\n            .then((resp) => resp.json())\n            .then(function (response) {\n                this.setState({ storyIds: response });\n            }.bind(this));\n    }\n\n    isMobileView() {\n        return window.innerWidth <= 1000;\n    }\n\n    render() {\n\n        if (this.state.storyIds) {\n            let stories = [];\n            for (let storyId of this.state.storyIds) {\n                stories.push(<Story\n                    key={storyId}\n                    id={storyId}\n                    commentCallback={this.commentClickCallback}\n                    isMobile={this.state.isMobile}\n                    selected={this.state.selectedStory === storyId && !this.state.isMobile}>\n                </Story>)\n            }\n            if (this.isMobileView()) {\n                return (\n                    <div className=\"wrap\">\n                        <div className=\"story-window box-full\" ref={this.ref}>\n                            {stories}\n                        </div>\n                    </div>\n                );\n            } else {\n                return (\n                    <div className=\"wrap\">\n                        <div className=\"story-window box-left\" ref={this.ref}>\n                            {stories}\n                        </div>\n                        <div className=\"box-right\">\n                            <CommentWindow kids={this.state.storyCommentIds} displayText={this.state.selectedStoryText}></CommentWindow>\n                        </div>\n                    </div>\n                );\n            }\n\n        }\n\n        return (\n            <div>\n                <p className=\"loading\">\n                    Loading...\n                </p>\n            </div>\n        );\n    }\n}\n\nexport default StoryWindow;","export default __webpack_public_path__ + \"static/media/yahnw.f8a8da28.png\";","import React, { Component } from 'react';\nimport './styles/ribbon.css'\nimport yahnw from './imgs/yahnw.png';\n\nclass Ribbon extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedButton: 'Top'\n        }\n    }\n\n    storyButtonClicked(buttonClicked) {\n        this.props.storyModeChangedCallback(buttonClicked);\n        this.setState({ selectedButton: buttonClicked });\n    }\n\n    render() {\n\n        const styling = {\n            backgroundColor: '#272727'\n        }\n\n        return (\n            <div className=\"ribbon\">\n                <img src={yahnw} className=\"logo\"></img>\n                <p>YAHNW</p>\n                <div className=\"button-box\">\n                    <button className=\"story-button\"\n                        style={this.state.selectedButton === 'Top' ? styling : {}}\n                        onClick={() => this.storyButtonClicked('Top')}>\n                        <p>Top</p>\n                    </button>\n                    <button className=\"story-button\"\n                        style={this.state.selectedButton === 'Best' ? styling : {}}\n                        onClick={() => this.storyButtonClicked('Best')}>\n                        <p>Best</p>\n                    </button>\n                    <button className=\"story-button\"\n                        style={this.state.selectedButton === 'New' ? styling : {}}\n                        onClick={() => this.storyButtonClicked('New')}>\n                        <p>New</p>\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Ribbon;","import React, { Component } from 'react';\nimport StoryWindow from './StoryWindow';\nimport Ribbon from './Ribbon';\nimport './styles/app.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      storyMode: 'Top'\n    }\n  }\n\n  storyModeChanged = (s) => {\n    this.setState({ storyMode: s });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Ribbon storyModeChangedCallback={this.storyModeChanged}></Ribbon>\n        <StoryWindow storyMode={this.state.storyMode}></StoryWindow>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}